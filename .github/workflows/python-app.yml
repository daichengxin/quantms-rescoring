# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install poetry
        poetry build
        pip install dist/*.whl
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        CUDA_VISIBLE_DEVICES: "-1"
      run: |
        poetry run pytest -vv
    - name: Download test files
      env:
        CUDA_VISIBLE_DEVICES: "-1"
      run: |
        wget https://ftp.pride.ebi.ac.uk/pub/databases/pride/resources/proteomes/quantms-ci-github/quantms-utils/TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01.mzML
        wget https://ftp.pride.ebi.ac.uk/pub/databases/pride/resources/proteomes/quantms-ci-github/quantms-utils/TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01_comet.idXML
        wget https://ftp.pride.ebi.ac.uk/pub/databases/pride/resources/proteomes/quantms-ci-github/quantms-utils/191126_AMLM_THY01-DN4_Thymus_Tue39L243_10_DDA_2_400-1000mz_msms40_standard.mzML
        wget https://ftp.pride.ebi.ac.uk/pub/databases/pride/resources/proteomes/quantms-ci-github/quantms-utils/191126_AMLM_THY01-DN4_Thymus_Tue39L243_10_DDA_2_400-1000mz_msms40_standard_comet.idXML
    - name: Test ms2pip ms2rescore
      env:
        CUDA_VISIBLE_DEVICES: "-1"
      run: |
        rescoring msrescore2feature --idxml TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01_comet.idXML --mzml TMT_Erwinia_1uLSike_Top10HCD_isol2_45stepped_60min_01.mzML --processes 2 --feature_generators 'ms2pip,deeplc'
    
    - name: Test alphapeptdeep ms2rescore
      env:
        CUDA_VISIBLE_DEVICES: "-1"
      run: |
        rescoring msrescore2feature --idxml 191126_AMLM_THY01-DN4_Thymus_Tue39L243_10_DDA_2_400-1000mz_msms40_standard_comet.idXML --mzml 191126_AMLM_THY01-DN4_Thymus_Tue39L243_10_DDA_2_400-1000mz_msms40_standard.mzML --processes 8 -o test3.idXML --feature_generators 'alphapeptdeep'
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: bigbio/quantms-rescoring